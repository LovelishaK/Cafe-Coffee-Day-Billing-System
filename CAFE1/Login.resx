<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCACmAM8DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDj/O2nHeghpmAUEmlt7J55N2CB61s2tqkA4wT614rkonsKLZFZ
        2G1Q0nX0q75ZX7vAoMgQ+tHnbzxWTbZqrIb5u04oyG5JpSFI96hYbT60ALISenSq7ru6VMMk89KcwXbg
        daAKbfu+vNQSSZNWpIXK57VYs/DV/dr5rIttB/z1nO0fgOpoSuJsyiM80xpNvcAe9dSmiaXbY86We8f0
        X92n+Jq3C1tbgfZdOtYyP4tm4n8TUOtTjux8knsjiVV5D+7R3/3VJqZbC7PItLk/SJv8K7eXUbxwBHJs
        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
        qVqy+h//2Q==
</value>
  </data>
</root>